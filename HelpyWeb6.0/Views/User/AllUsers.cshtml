@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Users> usersList = ViewData["users"] != null ? ViewData["users"] as List<Users> : new List<Users>();
    List<Bills> billsList = ViewData["Bills"] != null ? ViewData["Bills"] as List<Bills> : new List<Bills>();
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet"> <!-- Bootstrap Icons -->
<style>
    .input-group .form-control {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .input-group .btn {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    .selection-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* Two equal-width columns */
        gap: 10px;
        max-width: 600px;
        margin: 0 auto;
        justify-items: center;
    }

    .option-button {
        padding: 10px 20px;
        border: 1px solid #FF6B81; /* Adjust to preferred color */
        border-radius: 20px;
        background-color: #f0f4ff;
        color: #333;
        width: 100%; /* Make buttons fill the grid cell */
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
    }

        .option-button.selected {
            background-color: #FF6B81; /* Selected color */
            color: white;
        }
</style>

<div class="container">
    <div class="page-inner">
        <div class="d-flex align-items-left align-items-md-center flex-column flex-md-row pt-2 pb-4">
            <div>
                <h3 class="fw-bold mb-3">Users</h3>
            </div>
            <div class="ms-md-auto py-2 py-md-0">
                <a href="#" class="btn btn-primary btn-round" data-bs-toggle="modal" data-bs-target="#addUserModal">Add User</a>
            </div>
        </div>
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Gender</th>
                    <th>Sexuality</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in usersList)
                {
                    <tr>
                        <td>@user.Id</td>
                        <td>@user.FullName</td>
                        <td>@user.Email</td>
                        <td>@user.Gender</td>
                        <td>@user.Sexuality</td>
                        <td>View</td>

                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Gender</th>
                    <th>Sexuality</th>
                    <th>Actions</th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addUserModalLabel">Register User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="registrationForm" enctype="multipart/form-data">
                    <input type="hidden" id="latitude" name="Latitude">
                    <input type="hidden" id="longitude" name="Longitude">
                    <input type="hidden" id="city" name="City">
                    <input type="hidden" id="country" name="Country">
                    <div class="row">
                        <!-- Email -->
                        <div class="col-md-4 mb-3">
                            <label for="email" class="form-label">Email <span class="text-danger">*</span></label>
                            <input type="email" class="form-control" name="Email" id="email" required placeholder="Enter email">
                        </div>
                        <!-- Password -->
                        <div class="col-md-4 mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" name="Password" class="form-control" id="password" placeholder="Enter password">
                        </div>
                        <!-- Full Name -->
                        <div class="col-md-4 mb-3">
                            <label for="fullName" class="form-label">Full Name <span class="text-danger">*</span></label>
                            <input type="text" name="FullName" class="form-control" id="fullName" required placeholder="Enter full name">
                        </div>

                    </div>
                    <div class="row">
                        <!-- Date of Birth -->
                        <div class="col-md-4 mb-3">
                            <label for="Birthday" class="form-label">Date of Birth</label>
                            <input type="date" name="Birthday" class="form-control" id="birthday">
                        </div>
                        <!-- City -->
                        <div class="col-md-4 mb-3">
                            <label for="location" class="form-label">
                                Location (City, Country) <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <input type="text" name="Location" class="form-control" id="location" placeholder="Enter location">
                                <button class="btn btn-outline-secondary" type="button" id="getCurrentLocation">
                                    <i class="bi bi-geo-alt-fill"></i>
                                </button>
                            </div>
                            <ul class="list-group" id="suggestions" style="position: absolute; z-index: 1000; display: none; max-height: 200px; overflow-y: auto;"></ul>
                        </div>
                        <!-- Ethnicity -->
                        <div class="col-md-4 mb-3">
                            <label for="ethnicity" class="form-label">Ethnicity <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="Ethnicity" id="ethnicity" required placeholder="Enter ethnicity">
                        </div>
                    </div>
                    <div class="row">
                        <!-- Gender -->
                        <div class="col-md-4 mb-3">
                            <label for="gender" class="form-label">Gender <span class="text-danger">*</span></label>
                            <select class="form-select form-control" name="Gender" id="gender" required>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        <!-- Sexuality -->
                        <div class="col-md-4 mb-3">
                            <label for="sexuality" class="form-label">Sexuality <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="Sexuality" id="sexuality" required placeholder="Enter sexuality">
                        </div>
                        <!-- Occupation -->
                        <div class="col-md-4 mb-3">
                            <label for="occupation" class="form-label">Occupation</label>
                            <input type="text" class="form-control" name="Occupation" id="occupation" placeholder="Enter occupation">
                        </div>
                    </div>
                    <div class="row">
                        <!-- Images Upload -->
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Upload Public Images <span class="text-danger">*</span></label>
                            <input type="file" class="form-control" name="PublicImages" id="publicImages" multiple>
                            <small class="form-text">You can upload between 1 to 8 images.</small>
                        </div>
                        <!-- Images Upload -->
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Upload Private Images <span class="text-danger">*</span></label>
                            <input type="file" class="form-control" name="PrivateImages" id="privateImages" multiple>
                            <small class="form-text">You can upload between 1 to 8 images.</small>
                        </div>
                        <!-- Age -->
                        <div class="col-md-4 mb-3">
                            <label for="age" class="form-label">Age <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" name="Age" id="age" required placeholder="Enter age">
                        </div>
                    </div>
                    <div class="row">
                        <!-- Description -->
                        <div class="col-md-4 mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" name="Description" id="description" rows="1" placeholder="Enter description"></textarea>
                        </div>
                        <!-- Intentions -->
                        <div class="col-md-4 mb-3">
                            <label for="intentions" class="form-label">Intentions</label>
                            <input type="text" class="form-control" name="Intentions" id="intentions" placeholder="Enter intentions">
                        </div>
                        <!-- Type -->
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">Body Type <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="BodyType" id="BodyType" required placeholder="Enter user type">
                        </div>
                    </div>
                    <div class="row">
                        <!-- Selected Items -->
                        <div class="col-md-4 mb-3">
                            <label for="selectedItems" class="form-label">Bills <span class="text-danger">*</span></label>
                            <select class="form-select form-control" name="SelectedItems" id="SelectedItems" required>
                                @foreach (var item in billsList)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }

                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">Smoking <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="Smoking" id="Smoking" required placeholder="Enter user type">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">RelationshipStatus <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="RelationshipStatus" id="RelationshipStatus" required placeholder="Enter user type">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">HeightInInches <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" name="HeightInInches" id="heightInInches" required placeholder="Enter user type">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">Education <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="Education" id="education" required placeholder="Enter user type">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">Drinking <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="Drinking" id="drinking" required placeholder="Enter user type">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">Language <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="Language" id="language" required placeholder="Enter user type">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">Children <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="Children" id="children" required placeholder="Enter user type">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="type" class="form-label">LookingFor <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" name="LookingFor" id="LookingFor" required placeholder="Enter user type">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveUser">Save User</button>
            </div>
        </div>
    </div>
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDIARYnW2OXbfRa_UC7caDWDakUwuJgJBw&libraries=places"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/dashboard/dashboard.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {

        const input = document.getElementById('location');
        const suggestionsList = document.getElementById('suggestions');
        const autocompleteService = new google.maps.places.AutocompleteService();
        const geocoder = new google.maps.Geocoder();

        // Hidden inputs
        const latitudeInput = document.getElementById('latitude');
        const longitudeInput = document.getElementById('longitude');
        const cityInput = document.getElementById('city');
        const countryInput = document.getElementById('country');

        // Handle input events to fetch suggestions
        input.addEventListener('input', () => {
            debugger;
            const query = input.value.trim();
            if (query) {
                autocompleteService.getPlacePredictions(
                    { input: query, types: ['(cities)'] },
                    (predictions, status) => {
                        if (status === google.maps.places.PlacesServiceStatus.OK && predictions) {
                            showSuggestions(predictions);
                        } else {
                            suggestionsList.style.display = 'none';
                        }
                    }
                );
            } else {
                suggestionsList.style.display = 'none';
            }
        });

        // Display suggestions in the dropdown
        function showSuggestions(predictions) {
            suggestionsList.innerHTML = '';
            predictions.forEach(prediction => {
                const li = document.createElement('li');
                li.textContent = prediction.description;
                li.className = 'list-group-item list-group-item-action';
                li.addEventListener('click', () => {
                    input.value = prediction.description;
                    suggestionsList.style.display = 'none';

                    // Fetch and set additional details
                    fetchPlaceDetails(prediction.place_id);
                });
                suggestionsList.appendChild(li);
            });
            suggestionsList.style.display = 'block';
        }

        // Fetch place details using Place ID
        function fetchPlaceDetails(placeId) {
            const placesService = new google.maps.places.PlacesService(document.createElement('div'));
            placesService.getDetails({ placeId: placeId }, (place, status) => {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    const lat = place.geometry.location.lat();
                    const lng = place.geometry.location.lng();
                    const city = place.address_components.find(component =>
                        component.types.includes('locality')
                    )?.long_name;
                    const country = place.address_components.find(component =>
                        component.types.includes('country')
                    )?.long_name;

                    // Populate hidden inputs
                    latitudeInput.value = lat;
                    longitudeInput.value = lng;
                    cityInput.value = city || '';
                    countryInput.value = country || '';

                    console.log('Details:', { lat, lng, city, country });
                } else {
                    console.error('Error fetching place details:', status);
                }
            });
        }

        // Close suggestions when clicking outside
        document.addEventListener('click', (e) => {
            if (!suggestionsList.contains(e.target) && e.target !== input) {
                suggestionsList.style.display = 'none';
            }
        });

        // Fetch current location and reverse geocode
        const button = document.getElementById('getCurrentLocation');
        button.addEventListener('click', () => {
            debugger;
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const { latitude, longitude } = position.coords;
                        latitudeInput.value = latitude;
                        longitudeInput.value = longitude;

                        // Reverse geocode to fetch city and country
                        geocoder.geocode(
                            { location: { lat: latitude, lng: longitude } },
                            (results, status) => {
                                if (status === google.maps.GeocoderStatus.OK && results.length > 0) {
                                    const addressComponents = results[0].address_components;
                                    const city = addressComponents.find(c => c.types.includes('locality'))?.long_name;
                                    const country = addressComponents.find(c => c.types.includes('country'))?.long_name;

                                    // Populate inputs
                                    input.value = `${city}, ${country}`;
                                    cityInput.value = city || '';
                                    countryInput.value = country || '';
                                } else {
                                    console.error('Error reverse geocoding location:', status);
                                }
                            }
                        );
                    },
                    (error) => {
                        console.error('Error fetching location:', error);
                        alert('Unable to fetch your location.');
                    }
                );
            } else {
                alert('Geolocation is not supported by your browser.');
            }
        });
    });





</script>